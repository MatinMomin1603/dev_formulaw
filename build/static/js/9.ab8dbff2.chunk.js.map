{"version":3,"sources":["pages/LoginPage.js","Common/Constant.js","Common/service-config.js","Common/Api-service.js"],"names":["LoginPage","navigate","useNavigate","useState","currentView","message","useMessage","messageApi","contextHolder","userName","setUserName","password","setPassword","showSpinner","setSpinner","submitForm","e","preventDefault","console","log","payLoad","username","formulawAdminLogin","then","res","data","status","localStorage","setItem","JSON","stringify","access_tocken","open","type","content","setTimeout","tokenId","getItem","catch","err","id","spinning","for","onChange","target","value","required","onClick","currentViewPage","Url","api","token","axios","create","baseURL","Const","headers","getLawyerRequest","Page","get","post","getLawyerList","currentPage","getStatusUpdate","payload","put"],"mappings":"kNAqMeA,UA/KG,WAEhB,IAAMC,EAAWC,cAEjB,EAAsCC,mBAAS,UAA/C,mBAAOC,EAAP,KACA,GADA,KACoCC,IAAQC,cAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,EAAgCL,qBAAhC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAgCP,qBAAhC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,oBAAS,GAA3C,mBAAOU,EAAP,KAAoBC,EAApB,KAEMC,EAAa,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,WAAYV,GACxBS,QAAQC,IAAI,WAAYR,GAGxB,IAAIS,EAAU,CAEZC,SAAUZ,EACVE,SAAUA,GAIZW,YAAmBF,GAASG,MAAK,SAACC,GAChCN,QAAQC,IAAI,MAAOK,IAEK,IAApBA,EAAIC,KAAKC,SAEXC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,EAAIC,KAAKM,gBAItDjB,GAAW,GACXP,EAAWyB,KAAK,CACdC,KAAM,UACNC,QAAQ,GAAD,OAAKV,EAAIC,KAAKpB,WAGvB8B,YAAW,WAETlC,EAAS,gBACR,MAGL,IAAMmC,EAAUT,aAAaU,QAAQ,SACpCnB,QAAQC,IAAI,WAAWiB,MAGvBE,OAAM,SAACC,GACRrB,QAAQC,IAAIoB,OAiHhB,OACE,yBAASC,GAAG,aAAZ,SArGsB,WAGtB,GACO,WADCpC,EAEJ,OAEE,qCAEGI,EAGD,+BACA,eAAC,IAAD,CAAMgC,GAAG,OAAOC,SAAU5B,EAA1B,UAEE,4CAEA,qCAEI,4CACA,+BACE,+BACE,uBAAO6B,IAAI,WAAX,uBACA,uBAAOT,KAAK,OAAOO,GAAG,WAAWG,SAAU,SAAC3B,GAAD,OAAON,EAAYM,EAAE4B,OAAOC,QAAQC,UAAQ,OAEzF,+BACE,uBAAOJ,IAAI,WAAX,uBACA,uBAAOT,KAAK,WAAWO,GAAG,WAAWG,SAAU,SAAC3B,GAAD,OAAOJ,EAAYI,EAAE4B,OAAOC,QAAQC,UAAQ,aAUnG,wBAAQC,QAAShC,EAAjB,2BAiEPiC,O,qLC/LQ,EACN,CACFC,IAAK,0BCAL,SAASC,IACd,IAAMC,EAAQxB,aAAaU,QAAQ,SAiBjC,OAhBFnB,QAAQC,IAAI,QAAQgC,GAMHC,IAAMC,OAAO,CAC1BC,QAASC,EAAUN,IACnBO,QAAS,CACP,eAAgB,mBAChB,+BAA4BL,MCP7B,SAASM,EAAiBC,GAC7B,OAAOR,IAAMS,IAAN,2CAA8CD,EAA9C,cAIJ,SAASpC,EAAmBF,GAK/B,OAHAF,QAAQC,IAAI,YAAaC,GAGlB8B,IAAMU,KAAK,2BAA4B/B,KAAKC,UAAUV,IAI1D,SAASyC,EAAcC,GAC1B,OAAOZ,IAAMS,IAAN,+CAAkDG,EAAlD,cAGJ,SAASC,EAAgBC,GAC5B,OAAOd,IAAMe,IAAN,oCAA8CpC,KAAKC,UAAUkC","file":"static/js/9.ab8dbff2.chunk.js","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nimport { message, Spin } from 'antd';\n\nimport { useEffect, useState } from 'react';\nimport { formulawAdminLogin } from '../Common/Api-service';\n\nimport './Login.css'\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\n\n\nconst LoginPage = () => {\n\n  const navigate = useNavigate();\n\n  const [currentView, setCurrentView] = useState(\"signUp\");\n  const [messageApi, contextHolder] = message.useMessage();\n\n\n  const changeView = (view) => {\n    setCurrentView(\"view\")\n  }\n\n  const [userName, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [showSpinner, setSpinner] = useState(false);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    console.log(\"userName\", userName);\n    console.log(\"password\", password);\n\n\n    let payLoad = {\n\n      username: userName,\n      password: password\n\n    };\n\n    formulawAdminLogin(payLoad).then((res) => {\n      console.log(\"res\", res);\n\n      if (res.data.status === true) {\n        // console.log(res.data.access_tocken);\n        localStorage.setItem('token', JSON.stringify(res.data.access_tocken));\n        \n       \n        \n        setSpinner(true);\n        messageApi.open({\n          type: 'success',\n          content: `${res.data.message}`,\n        });\n\n        setTimeout(function () {\n\n          navigate(\"/dashboard\")\n        }, 1000);\n\n      }\n      const tokenId = localStorage.getItem('token');\n       console.log('token id',tokenId);\n\n\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n\n\n\n  // console.log(\"payload :\", payLoad)\n\n\n\n\n  const currentViewPage = () => {\n\n\n    switch (currentView) {\n      case \"signUp\":\n        return (\n\n          <>\n\n            {contextHolder}\n            \n            \n            <form>\n            <Spin id='spin' spinning={showSpinner} >\n           \n              <h2>Welcome !!</h2>\n              \n              <fieldset>\n               \n                  <legend>Log In</legend>\n                  <ul>\n                    <li>\n                      <label for=\"username\">Username:</label>\n                      <input type=\"text\" id=\"username\" onChange={(e) => setUserName(e.target.value)} required />\n                    </li>\n                    <li>\n                      <label for=\"password\">Password:</label>\n                      <input type=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} required />\n                    </li>\n                    {/* <li>\n                      <i/>\n                      <a onClick={ () => setCurrentView(\"PWReset\")} href=\"#\">Forgot Password?</a>\n                    </li> */}\n                  </ul>\n                \n              </fieldset>\n              {/* <button onClick={submitForm} >Login</button> */}\n              <button onClick={submitForm}>Login</button>\n\n               \n\n              {/* <button type=\"button\" onClick={ () => setCurrentView(\"signUp\")}>Create an Account</button> */}\n              </Spin>\n            </form>\n            \n\n          </>\n        )\n        break\n      //   case \"logIn\":\n      //     return (\n      //       <form>\n      //         <h2>Welcome Back!</h2>\n      //         <fieldset>\n      //           <legend>Log In</legend>\n      //           <ul>\n      //             <li>\n      //               <label for=\"username\">Username:</label>\n      //               <input type=\"text\" id=\"username\" required/>\n      //             </li>\n      //             <li>\n      //               <label for=\"password\">Password:</label>\n      //               <input type=\"password\" id=\"password\" required/>\n      //             </li>\n      //             <li>\n      //               <i/>\n      //               <a onClick={ () => setCurrentView(\"PWReset\")} href=\"#\">Forgot Password?</a>\n      //             </li>\n      //           </ul>\n      //         </fieldset>\n      //         <button>Login</button>\n      //         <button type=\"button\" onClick={ () => setCurrentView(\"signUp\")}>Create an Account</button>\n      //       </form>\n      //     )\n      //     break\n      //   case \"PWReset\":\n      //     return (\n      //       <form>\n      //       <h2>Reset Password</h2>\n      //       <fieldset>\n      //         <legend>Password Reset</legend>\n      //         <ul>\n      //           <li>\n      //             <em>A reset link will be sent to your inbox!</em>\n      //           </li>\n      //           <li>\n      //             <label for=\"email\">Email:</label>\n      //             <input type=\"email\" id=\"email\" required/>\n      //           </li>\n      //         </ul>\n      //       </fieldset>\n      //       <button>Send Reset Link</button>\n      //       <button type=\"button\" onClick={ () => setCurrentView(\"logIn\")}>Go Back</button>\n      //     </form>\n      //     )\n      default:\n        break\n    }\n  }\n\n  return (\n    <section id=\"entry-page\">\n      {currentViewPage()}\n    </section>\n  )\n}\n\nexport default LoginPage","\nexport default {\n    API: {\n       Url: 'http://13.127.124.169/', //live http://localhost:3000/dev\n\n       \n       \n    },\n  };\n  \n\n\n\n","import axios from 'axios';\nimport Const from './Constant';\n\nexport function api() {\n  const token = localStorage.getItem('token');\n  console.log(\"token\",token);\n  // const tokenId = localStorage.getItem('token');\n  //      console.log('token id',tokenId);\n\n    \n    // const token=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzhlYmQzZjE3OGVmNzNmNTAwZmQzMzEiLCJpYXQiOjE2NzA0OTk5MjgsImV4cCI6MTcwMjA1NzUyOH0.HcB3W3cp1vxPeTWq8DqEGI-Wn6tbbagdv06JuYwwbWQ\"\n    let instance = axios.create({\n      baseURL: Const.API.Url,\n      headers: {  \n        'Content-Type': 'application/json',\n        \"Authorization\" : `Bearer ${token}`\n      }\n      \n    });\n  \n   \n    return instance;\n  }\n  ","// import { api } from \"../components/common/service-config\";\nimport { api } from \"./service-config\";\n\nexport function getArticleList(){\n    return api().get('dev_formulaw/artical');\n}\n\n\nexport function getLawyerRequest(Page){\n    return api().get(`dev_formulaw/user/getusers/?page=${Page}&limit=10`);\n}\n\n\nexport function formulawAdminLogin(payLoad){\n\n    console.log(\"payload :\", payLoad);\n\n\n    return api().post('dev_formulaw/admin/login', JSON.stringify(payLoad));\n\n}\n\nexport function getLawyerList(currentPage){\n    return api().get(`dev_formulaw/lawyer/getLawyers/?page=${currentPage}&limit=10`)\n}\n\nexport function getStatusUpdate(payload){\n    return api().put(`/dev_formulaw/lawyer/updateStatus`,JSON.stringify(payload))\n}\n\n\n\n"],"sourceRoot":""}